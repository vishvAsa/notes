[[data]]
Software = 'make'
"Operand Type" = 'target'
Feature = 'define'
Syntax = '''
targetName: [dep1 dep2 ..]
\t command'''
Description = 'The target is run whenever any of the dependencies changes.'

[[data]]
Software = 'make'
"Operand Type" = 'target'
Feature = 'define'
"Implementation Type" = 'caveat'
Description = '\t cannot be replaced with spaces.'

[[data]]
Software = 'make'
"Operand Type" = 'target'
Feature = 'non-file'
Subfeature = 'declare phony'
Syntax = '.PHONY: all stardict tars'
Description = 'avoids "target up to date" errors'

[[data]]
Software = 'make'
"Operand Type" = 'files'
Feature = 'wildcard'
Syntax = '$(wildcard *.c)'

[[data]]
Software = 'make'
"Operand Type" = 'command'
Feature = 'multiline'
Syntax = '''
foo:
    for i in `find`;     \
    do                   \
        all="$all $i"; \
    done;                \
    gcc $all'''
Description = 'Note: Escape $'

[[data]]
Software = 'make'
"Operand Type" = 'arguments'
Syntax = '''
make action VAR="value"
In file: 
VAR = "default"
action:
    @echo $(VAR)'''

[[data]]
Software = 'maven'
"Operand Type" = 'default directory structure'
Syntax = '''
project - src - main - {scala java resources webapp}
project - src - test
project - src - site (for project website)'''

[[data]]
Software = 'maven'
"Operand Type" = 'build phases / goals'
Syntax = '''
validate 
compile
 test
 package
 integration-test verify install deploy ...'''

[[data]]
Software = 'maven'
"Operand Type" = 'POM file'
Feature = 'basic info'
Syntax = '''
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>
<packaging>war</packaging><version>1.0-SNAPSHOT</version>
<groupId>com.example.guestbook</groupId>
<artifactId>guestbook</artifactId>
</project>'''

[[data]]
Software = 'maven'
"Operand Type" = 'POM file'
Feature = 'build'
Subfeature = 'scala plugin'
Syntax = '''
<build>
        <plugins>
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <sourceDir>src/main/java</sourceDir>
                    <jvmArgs>
                        <jvmArg>-Xms64m</jvmArg>
                        <jvmArg>-Xmx1024m</jvmArg>
                    </jvmArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>'''

[[data]]
Software = 'maven'
"Operand Type" = 'POM file'
Feature = 'dependencies'
Subfeature = 'scala'
Syntax = '''
<dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>2.7.2-rc2</version>
        </dependency>
</dependencies>'''

[[data]]
Software = 'maven'
"Operand Type" = 'POM file'
Feature = 'repositories for dependencies'
Syntax = '''
<repositories>
        <repository>
            <id>scala-tools.org</id>
            <name>Scala-tools Maven2 Repository</name>
            <url>http://scala-tools.org/repo-releases</url>
        </repository>
    </repositories>'''

[[data]]
Software = 'maven'
"Operand Type" = 'POM file'
Feature = 'repositories for build plugins'
Syntax = '''
<pluginRepositories>
        <pluginRepository>
            <id>scala-tools.org</id>
            <name>Scala-tools Maven2 Repository</name>
            <url>http://scala-tools.org/repo-releases</url>
        </pluginRepository>
    </pluginRepositories>'''

[[data]]
Software = 'maven'

[[data]]
Software = 'proguard'
"Operand Type" = 'concept'
Description = 'obfuscator, minimizer'

[[data]]
Software = 'proguard'
"Operand Type" = 'options'
Feature = 'warning suppression'
Syntax = '''
-ignorewarnings
-dontwarn java.awt.**'''

[[data]]
Software = 'sbt'
"Operand Type" = 'concept'
Description = '''
scala-based build tool.
maven + intellij + scala has caused weird problems in the past. sbt is more well trodden.'''

[[data]]
Software = 'sbt'
"Operand Type" = 'defaults'
Syntax = '''
Sources in the base directory
Sources in src/main/scala or src/main/java
Tests in src/test/scala or src/test/java
Data files in src/main/resources or src/test/resources
jars in lib'''
Description = 'without build settings.'

[[data]]
Software = 'sbt'
"Operand Type" = 'plugins'
Feature = 'global'
Syntax = 'In .sbt/1.0/plugins'

[[data]]
Software = 'sbt'
"Operand Type" = 'build config'
Feature = 'basic info'
Syntax = '''
name := "hello"
version := "1.0"
scalaVersion := "2.10.2"
sbt.version=0.13.0'''

[[data]]
Software = 'sbt'
"Operand Type" = 'build config'
Feature = 'dependencies'
Syntax = '''
libraryDependencies ++=
  "com.android.support" % "appcompat-v7" % "25.3.1" ::
  "com.android.support.test" % "runner" % "0.5" % "androidTest" ::
  "com.android.support.test.espresso" % "espresso-core" % "2.2.2" % "androidTest" ::
  Nil'''

[[data]]
Software = 'sbt'
"Operand Type" = 'build config'
Feature = 'dependencies'
Subfeature = 'scala version based'
Syntax = '"com.typesafe.akka" %% "akka-http" % akkaHttpVersion'
Description = 'resolves to finding akka-http_2.12 if scala 2.12 is being used.'

[[data]]
Software = 'sbt'
"Operand Type" = 'build config'
Feature = 'dependencies'
Subfeature = 'git'
Syntax = '''
lazy val root = (project in file(".")).dependsOn(scalaProgressBar)
lazy val scalaProgressBar = ProjectRef(uri("git://github.com/a8m/pb-scala.git#master"), "pb-scala")'''

[[data]]
Software = 'sbt'
"Operand Type" = 'build config'
Feature = 'dependencies'
Subfeature = 'unmanaged'
Syntax = '''
Just including in lib subfolder should work
unmanagedJars in Compile += file("lib/vertica_jdk_5.jar")'''

[[data]]
Software = 'sbt'
"Operand Type" = 'build config'
Feature = 'dependencies'
Subfeature = 'tree'
Syntax = '''
# Install coursier sbt plugin and then:
coursierDependencyTree'''

[[data]]
Software = 'sbt'
"Operand Type" = 'build config'
Feature = 'dependencies'
Subfeature = 'exclude'

[[data]]
Software = 'sbt'
"Operand Type" = 'build config'
Feature = 'dependencies'
Subfeature = 'check updates'
Syntax = '''
# Install https://github.com/rtimush/sbt-updates
dependencyUpdates'''

[[data]]
Software = 'sbt'
"Operand Type" = 'shell'
Feature = 'reload sbt config'
Syntax = '''
run reload
or restart shell'''

[[data]]
Software = 'gradle config'
"Operand Type" = 'repository'
Feature = 'jar library'
Syntax = '''
repositories {
   flatDir {
       dirs 'libs'
   }
}'''

[[data]]
Software = 'gradle config'
"Operand Type" = 'repository'
Feature = 'maven repo'
Syntax = '''
repositories {
   mavenCentral()
}
dependencies {
   compile 'com.google.code.gson:gson:2.2.4'
}'''

