<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>&#43;Parallel computing on Vishvas&#39;s notes</title>
    <link>https://vishvAsa.github.io/notes/computing/programming/programming_languages/parallel/</link>
    <description>Recent content in &#43;Parallel computing on Vishvas&#39;s notes</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://vishvAsa.github.io/notes/computing/programming/programming_languages/parallel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Condor</title>
      <link>https://vishvAsa.github.io/notes/computing/programming/programming_languages/parallel/condor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://vishvAsa.github.io/notes/computing/programming/programming_languages/parallel/condor/</guid>
      <description>&lt;p&gt;This is a common job-scheduler. Once you specify the job in a certain file, condor tries to execute it on some processor (in a cluster) and retrieve the result.&lt;/p&gt;&#xA;&lt;h2 id=&#34;priority-and-restarts&#34;&gt;Priority and restarts&lt;/h2&gt;&#xA;&lt;p&gt;Commonly jobs dispatched by condor are low priority - so if a higher priority process comes in, the condor job is stopped and moved to a different processor. If the program has checkpointing facilites, the job simply continues from where it stopped : Eg: Compiled languages. But if checkpointing is not available, the process restarts when moved to a different node: Eg: most interpreted languages.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ORC</title>
      <link>https://vishvAsa.github.io/notes/computing/programming/programming_languages/parallel/orc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://vishvAsa.github.io/notes/computing/programming/programming_languages/parallel/orc/</guid>
      <description>&lt;h2 id=&#34;distinctive-features-of-the-language&#34;&gt;Distinctive features of the language&lt;/h2&gt;&#xA;&lt;h3 id=&#34;purpose-of-design&#34;&gt;Purpose of design&lt;/h3&gt;&#xA;&lt;p&gt;Inspired by functional programming languages.&lt;/p&gt;&#xA;&lt;p&gt;Distributed computing: There&amp;rsquo;ll be many services on the internet, need a language to orchestrate them. So, good internet mashup language.&lt;/p&gt;&#xA;&lt;p&gt;Good for concisely reasoning about distrubted systems.&lt;/p&gt;&#xA;&lt;h3 id=&#34;sites&#34;&gt;Sites&lt;/h3&gt;&#xA;&lt;p&gt;Everything is a site: a possibly remote function without side-effect which may not respond. Even +, -, if(..) etc.. are sites. These may return sites too. Actual site call is not executed until all arguments are available.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
