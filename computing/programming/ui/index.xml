<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>&#43;User interface on Vishvas&#39;s notes</title>
    <link>file:///storage/emulated/0/notesData/notes/computing/programming/ui/</link>
    <description>Recent content in &#43;User interface on Vishvas&#39;s notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="file:///storage/emulated/0/notesData/notes/computing/programming/ui/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GUI Metaphors</title>
      <link>file:///storage/emulated/0/notesData/notes/computing/programming/ui/GUI_Metaphors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>file:///storage/emulated/0/notesData/notes/computing/programming/ui/GUI_Metaphors/</guid>
      <description>The most common graphical user interfaces use the desktop/ workspace and the windows metaphor.
Desktop A desktop/ workspace corresponds to a big area in the available screen space whence applications are launched, and within which statuses, widgets and windows are displayed.
There may be multiple workspaces on a device - especially in case of devices with limited screen size.
Layering Various windows, widgets and the desktop conceptually form a stack of various displays available to the user.</description>
    </item>
    
    <item>
      <title>GUI Software Stack</title>
      <link>file:///storage/emulated/0/notesData/notes/computing/programming/ui/GUI_Software_Stack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>file:///storage/emulated/0/notesData/notes/computing/programming/ui/GUI_Software_Stack/</guid>
      <description>Graphical user interfaces are implemented using a stack of software. The software stack, with examples is as follows:
  Windowing system: provides abstraction from hardware, provides graphics primitives, basic window drawing abilities. Eg: xorg server.
  Login session manager. Enables selection of desktop environment. Eg: gdm, kdm, lxdm, simpledm.
  Desktop environment. Eg: gnome, kde (programmed with widgeting toolkits gtk+ and qt respectively). application ivocation: mouse driven or keyboard driven (possibly with autocompletion).</description>
    </item>
    
    <item>
      <title>Logging systems</title>
      <link>file:///storage/emulated/0/notesData/notes/computing/programming/ui/Logging_systems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>file:///storage/emulated/0/notesData/notes/computing/programming/ui/Logging_systems/</guid>
      <description>Examples include various java logging frameworks including log4j.
Requirements One is to be able to log at various levels, usually named debug, info, error etc..
Log messages should be informative and customizable: printing things like the name of the function where it originates, the class-name, the line number, the time, the log-message level etc..
Logging is to have a simple, yet expressive syntax for constructing messages.
One is to be able to set logging levels for various modules at various levels, so as to filter out relatively unimportant messages out of the log.</description>
    </item>
    
    <item>
      <title>Special indicators</title>
      <link>file:///storage/emulated/0/notesData/notes/computing/programming/ui/Special_indicators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>file:///storage/emulated/0/notesData/notes/computing/programming/ui/Special_indicators/</guid>
      <description>Lighted icons Sometimes lighted icons are provided to provided binary information about something. Eg: is the caps-lock on, is there a waiting notification.</description>
    </item>
    
    <item>
      <title>Special input hardware</title>
      <link>file:///storage/emulated/0/notesData/notes/computing/programming/ui/Special_input_hardware/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>file:///storage/emulated/0/notesData/notes/computing/programming/ui/Special_input_hardware/</guid>
      <description>Buttons Buttons are often provided, dedicated for a simgle (possibly broad) purpose. These include buttons to power off, adjust volume, reset the computer etc.. They provide a useful, cheap ever-present way of accepting input from the user, which is partly why they are not located on the screen.
Dials Dials - simulated or otherwise - are very useful for accepting numeric input; and are therefore provided in case of clocks, timers, etc.</description>
    </item>
    
  </channel>
</rss>