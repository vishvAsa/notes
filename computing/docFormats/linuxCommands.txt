With thanks and additions to http://wiki.linuxquestions.org ... Creative Commons copyright.

categories:
Finding help

File commands
File Search
File Analysis
File Manipulation
File usage

Text editor
Basic commands
Other useful commands
Navigation
Deleting
Undo
Copying
Pasting

Text Viewing and Processing Tools

Directory Commands

User Commands

Compressing Files
uncompressing Files

Cryptography commands
Encryption tools
Decryption tools

Disc and Tape Drives Commands
New drive, configuring hard drive
Partitioning, formatting and tuning a file system
Partitioning
Formatting
Tuning
Using a configured hard drive or tape
Managing file systems

Managing files, folders, directories
    
internet and network Commands

Kernel Commands

System Information
General System Information Tools/Utilities
Memory Diagnostic Tools/Utilities
CPU Diagnostic Tools/Utilities
Disk and File System Diagnostic Tools/Utilities
Local Devices Diagnostic Tools/Utilities
Network Diagnostic Tools/Utilities
Software / Package management
signals

X-Windows Troubleshooting Tools/Utilities

Startup/Shutdown Commands

Library-related Commands and Files
Loading shared libs at runtime
Creating your own libraries

Programming-related Commands
Some programming-related commands:
compiling
linking and libraries (see also Library-related_Commands_and_Files)
dealing with object files (see also binutils)
lexical analyzer and parser
debugging
build tools
source code tagging
revision control
database
misc

Managing Sessions

interesting keystrokes

bash

SLEEP COMMANDS

multimedia commands

edutainment
reference commands

using peripherals
pocket pc

windows emulation

--------------------------------------------------

Finding help
help
man (you may browse em in kde help center)
info (you may browse em in kde help center too.) 
info coreutils for simple commands
pinfo
whereis
whatis a search in a database of commands and man pages
apropos is like whatis

File commands
File Search

find - Versatile tool for searching for files based on name, size, date, etc.
locate - Lists all files with a given word in the name
whereis - Finds commands, source, and manpages
which - Finds commands on the path 


File Analysis

cksum - Calculate the checksum of a file.
diff - Find differences between two files.
file - Determine file type.
ls - List the contents of a directory.
lsattr - List the attributes of a file.
md5sum - Calculate or check the MD5 checksum of a file
pathchk - Check filename for portability.
sum - Calculate a checksum.
wc - Displays line, word and character count for specified filename. 
ots - summarizing tool


File Manipulation

cp - Copy a file.
dd - Copies a file and performs various conversions at the same time.
install - Copy file(s), preserving permissions.
ln - Create a link to a file.
lockfile - Create a semaphore.
mv - Rename or move a file... for multiple files: 
	$ for a in *; do mv "$a" "`tr A-Z a-z <<< $a`"; done
rename - Another renaming tool
rm - Remove (delete) a file. 
dos2unix - change format of line breaks.
patch patch in differences from diff.
lynx -dump file.html > file.txt  convert html to txt format

File Attribute Manipulation

chgrp - Change the group ownership of a file or directory.
chmod - Change the mode (access permissions) of a file or directory.
chown - Change the owner and group of a file or directory.
getfacl - View the acl permissions associated with the file or directory.
setfacl - Change the acl permissions associated with the file or directory.
touch - Update access times or, potentially, create a file. 


File usage

lsof - List all currently opened files
fuser - List which processes that are currently using a specific file 

Text editor

vi
vimtutor
                      ** Use the on-line help system **
  Vim has a comprehensive on-line help system.  To get started, try one of
  these three:
        - press the <HELP> key (if you have one)
        - press the <F1> key (if you have one)
        - type   :help <ENTER>
  Type   :q <ENTER>   to close the help window.
  You can find help on just about any subject, by giving an argument to the
  ":help" command.  Try these (don't forget pressing <ENTER>):
        :help w
        :help c_<T
        :help insert-index
	:help user-manual

 Saving and quitting, opening and writing from file
 :wq - save (write) and quit
 ZZ - another way to save and quit
 :q! - quits without saving the file
 :w - saves the file (note that appending q will save and then quit)
 :w path/filename - save the file you are working on in the directory path
 called filename
 Type  :!  followed by an external command to execute that command. 
 To save part of the file, type   :#,# w FILENAME 
 :edit ~/.vimrc opens that file
 :read $VIMRUNTIME/vimrc_example.vim copies the contents of that file



 find and replace:
 /key or n	to find
 ?key or Shift n	to find backwards
 To substitute new for the first old on a line type    :s/old/new
     To substitute new for all 'old's on a line type       :s/old/new/g
     To substitute phrases between two line #'s type       :#,#s/old/new/g
     To substitute all occurrences in the file type        :%s/old/new/g
     To ask for confirmation each time add 'c'             :%s/old/new/gc
 :set ic   (ignore case)
 Set the 'hlsearch' and 'incsearch' options:
     :set hls is
 To remove the highlighting of matches, type:
     :nohlsearch


 Navigation

 In command mode, the letters h,j,k,l will move the cursor left, down, up, right respectively.
 0 (zero) will move you to the beginning of the line and $ will move you to the end of the line.
 :89 or 89 shift g will take you to line 89. ^g will show you current line.
 Type  %  to find a matching ),], or } .

 Misc editing
 i - insert
 x - delete
 Type  a  to insert text AFTER the cursor. 
 Typing a capital  A  automatically appends text to the end of the line.
 r - replace
 Type a capital  R  to replace more than one character. 
 ce cw c$ - change word or sentace
 Type  o  to open a line below the cursor and place you in Insert mode.
 Typing a capital  O  opens the line ABOVE the line the cursor is on.


 Deleting

  The format for the  d  delete command is as follows:

         [number]   d   object      OR       d   [number]   object
  Where:
    number - is how many times to execute the command (optional, default=1).
    d - is the command to delete.
    object - is what the command will operate on (listed below).

  A short list of objects:
    w - from the cursor to the end of the word, including the space.
    e - from the cursor to the end of the word, NOT including the space.
    $ - from the cursor to the end of the line.

 NOTE:  For the adventurous, pressing just the object while in Normal mode
       without a command will move the cursor as specified in the object list.
 Type   dd   to delete a whole line.


 Type  p  to put the last deletion after the cursor.

 Undo/Redo
 u - Undo the last changes,   U   to fix a whole line. 
 CTRL-R Redo

 Copying

 y^ - Copy from the current position to the start of line
 y$ - Copy from the current position to the end of the line
 yw - Copy fromthe current position to the end of the word
 3yy - Copy 3 lines in downward direction from the current position.


 Pasting

 p - Pastes after the cursor
 P - Pastes before the cursor
 ''n''p - Pastes text ''n'' times



Text Viewing and Processing Tools

awk - A utility and scripting language
cat - Con-cat-enate file(s) to stdout
cut - Extract portions of lines
diff - Compare differences of files
ed - The editor. ED!
egrep - See grep
fgrep - See grep
fold - Wrap each input line to fit in specified width
grep - Global/regular expression/print (print lines matching an expression)
head - View the top of a file
less - A more powerful pager
more - A less powerful pager
nl - Number lines of files
pg - Another pager
sed - Stream editor (non-interactive programmatic editor)
sort - Sort input
tac - Cat files in reverse
tail - View the bottom of a file
tr - Transform/transliterate text
uniq - Manipulate duplicate lines of a sorted file 

Text processors in file utils' clothing

basename - cut a line to the right from the last slash (works with any input)
dirname - cut a line to the left from the last slash (works with any input) 


Directory Commands

cd - Change directories.
ln - Create a link to a file or directory
ls - Lists the files contained in the directory
mkdir - Create a new directory.
pwd - Print the current working directory.
rmdir - Remove the specified directory.
symlinks - Find symbolic links. 

For a large list of many core shell commands, you can use info coreutils. 

User Commands

finger - Display information about a user. May be turned off by default.
chfn - Helps to change the finger information for the users.
groupmod - Modify information in the system group files.
grpck - Check system group files for validity.
id - Display information about a user.
passwd - Change a user's password.
pwck - Check system password files for validity.
quota - Assign quota for users and groups.
su - Change to root or another user id.
useradd - Add a new user to the system.
userdel - Delete a user from the system.
usermod - Modify user information on the system.
users - Display a list of current users.
who - Display a list of current users.
whoami - Keep track of your effective uid.
w - Display who is logged on and what is he doing. 
sudo execute command as another user    
cron - schedule task etc.

Compressing Files

bzip2- Compress the specified filename.
compress- Compresses the specified filename using the LZW compression algorithm.
gzexe- Compresses the specified executable command. The specified file automatically decompresses and executes when you run it.
gzip- Compresses the specified file using the LZ77 compression algorithm.
zip - (Info-ZIP) - a PKZip-compatible compression suite
zforce- Adds the .gz extension to all the files in the working deirectory or to the specified filename that was compressed using gzip. This utility prevents gzip from compressing files twice.
znew - Recompress the specified filename, which must be a compressed file created with the compress utility, using the gzip format. 

Note: While tar does no compressing, it is frequently used in conjunction with compression programs and even incorporates them into its options. For example, tar xzf file extracts gzip-compressed tarballs and tar xjf file (not on older versions of tar) extracts bzip2-compressed tarballs.


uncompressing files

bunzip2 (.bz2)- Decompresses the specified filename 
cabextract (.cab)- Extracts files from Microsoft cabinet archives 
uncompress- Decompresses the compress compressed file. 
gunzip (.gz)- This utility can decompress files created with the following utilities: compress, gzip and zip 
lha (.lha) - LZH un-archiver 
tar (.tar) - This command is what is typically used to compress and decompress files in linux. It is typically called in one of the following forms: 
        tar xvf filename.tar
        tar xvzf filename.tar.gz
        tar xvjf filename.tar.bz2
unace (.ace)- Decompresses ace files 
unarj (.arj)- Decompresses or lists the content of the specified ARJ archive. 
unrar (.rar)- Decompresses rar files 
unzip (.zip)- Decompresses and extracts files created by the Linux zip utility, PKZIP(MS-DOS) or WinZip(Microsoft Windows). 
zoo (.zoo) - ZOO un-archiver 

Cryptography commands

Encryption tools

mcrypt - Encrypts the specified file.
gpg - Encrypts data using GNU Privacy Guard.
mimencode - Encodes the specified binary file to on eof the ASCII encoding formats.
mpack - Pack a file in MIME format.
uuencode - Encodes the specified binary file so that it can be transferred over a medium which does not support non-ASCII characters. 


Decryption tools

gpg - Decrypts data using GNU Privacy Guard.
mdecrypt - Decrypts any file with the .enc suffix, that was encrypted by mcrypt.
munpack - unpack messages in MIME or split-uuencode format.
uudecode - Decodes the uuencode coded file.
uudeview - a powerful decoder for binary files. 


Disc and Tape Drives Commands

eject -t : eject media from the drive.

New drive, configuring hard drive

hdparm	configure hard disk params, like dma

Partitioning, formatting and tuning a file system

Partitioning

parted - command line partitioning tool. (parted sometimes complains about boundaries of partitions created with fdisk. parted can format a partition of type ext2 or fat32 partition while creating it.)
fdisk - Launches a menu-driven program that partitions a hard disk.
cfdisk - Interactive hard disc partition utility for text mode. 
badblocks	check for bad blocks.

Formatting

mkfs - front-end to various filesystem-creation tools
parted can create a filesystem while partitioning
mkfs.vfat /dev/sde1 to format a fat32 partition sde1
mkfs.ext2 /dev/sde2 to format an ext2 partition sde2 
	mke2fs is also used for formatting
Formatting a floppy disk:
fdformat /dev/fd0;mkdosfs or mkfs -t ext2 /dev/fd0
badblocks /dev/fd0H1440 1440 ... check a floppy with 2 bad blocks

Tuning

tune2fs - command to tune ext2/ext3 filesystems
tune2fs -j /dev/sde2 to convert an ext2 filesystem sde2 to ext3 by adding a journal
tune2fs -L /dev/sde2 bulkdata to set the volume label of sde2 to "bulkdata" 
debugfs - Interactive utility to repair the ext2 filesystem on specified drive.
e2fsck - Performs an analysis of the filesystem's integrity and optionally repairs errors.
badblocks - Scans the specified drive for bad blocks. 


Using a configured hard drive or tape

Managing file systems

autorun - Automatically recognizes all available CD-ROM drives.
df - Displays the amount of disc space used and remaining on all mounted filesystems.
mount - Attaches the device to a specified directory, which will serve as the filesystem's mount point.
umount - Unmounts the filesystem specified by the device.
sync - Flushes the filesystem buffers. 



Managing files, folders, directories

du - Displays the amount of disc space used in the current directory.
duchs - Lists the largest directories in human readable format 
eject - Ejects the media in the specified drive. 
    
    
internet and network Commands

gftp - Used to establish a connection with a specified host using the File Transfer Protocol.
ifconfig - Displays current information about the network interfaces.
ip - Used to manage IP network interfaces.
links - Launches the text based web browser (links).
lynx - Launches the text based web browser (lynx).
	lynx -dump is non interactive.
netstat - Displays information about the Linux networking subsystem.
nslookup - Lookup the numerical IP address of the specified host.
ping - Sends a packet to a designated address and wait for a response.
showmount - Displays the Network Filesystem mounts available.
smbclient - Launches an interactive samba utility which resembles ftp.
smbmount - Mounts a remote Samba service at the specified mount point.
smbstatus - Displays the current Samba connections.
smbumount - Unmounts the specified Samba mount point.
telnet - Opens a terminal window on the remote host and starts an interactive session.
traceroute - Print the route packets take to network host
wvdial - Initiates a PPP dial-up connection.
wvdialconf - Probes for a modem connected to your system. 
mtr a kind of traceroute
route ... traceroute
squid run a proxy
wget noninteractive network downloader
ethereal look at network traffic in promiscuous mode
hostname 
curl	get docs from/ to server
whois	get isp, hostname and ip details
wget	get doc using http
kget	get doc using http

Kernel Commands

Note, some of the following commands refer to kernel modules, which are dynamically loadable objects that the kernel uses for a variety of tasks, such as hardware drivers.

depmod - Create a module dependency list.
insmod - Install a module.
kerneld - Run kernel program in user space.
ksyms - Display kernel symbols.
lsmod - List installed modules.
modprobe - Load or list loadable modules.
modinfo - get information about module arguments
depmod - Creates a dependency file, "modules.dep", later used by modprobe to automatically load the relevant modules.
rmmod - Remove specified module.
sysctl - Configure kernel parameters at runtime.
uname - Display system information. 
lsusb - list usb devices.
usbmodules - get info about a certain usb device's module.

System Information

General System Information Tools/Utilities/ System tools

uname -a -- brief OS and kernel information.
dmesg -- kernel messages given during booting.
cat /var/log/messages -- is the same as dmesg
tail -f /var/log/messages -- show the last couple of lines an keep outputting new lines 
setup general os ip and nw setup utility
netsysv  configure services.
system-config-manyUtils configure various daemons and kernel
service start or stop services.
date - show or set time

Memory Diagnostic Tools/Utilities

cat /proc/meminfo -- static information about your RAM
top -- real-time RAM and CPU utilization printout
free -- Current memory/swap utilization. 


CPU Diagnostic Tools/Utilities

cat /proc/cpuinfo -- static information about your cpu 


Disk and File System Diagnostic Tools/Utilities

df -h -- current disk space usage ("-h" gives human-readable output)
du -h -- determine how much disk space is being used by Cwd, or any directory you specify after the du command (as in df, the "-h" means human-readable)
mount or cat /etc/mtab -- show currently mounted file systems.
cat /etc/fstab -- show configuration file for file system mounting.
fdisk -l [/dev/hda] -- show partition table(s), leave off device name to list all 
symlinks symbolic link maintenance utility


Local Devices Diagnostic Tools/Utilities

lspci -- list devices on the pci (peripheral component interconnect) bus. 


Network Diagnostic Tools/Utilities

route -n -- show routing table, using numerical addresses.
ifconfig $interface -- show the information for $interface (usually something like ifconfig eth0)
ifconfig -a -- show all current network interface information
ping $host -- use ping to determine if $host is alive on the network (for troubleshooting your local machine $host can equal "127.0.0.1" or "localhost"
Directory /proc/net/
File arp: arp cache. Maps IP address to MAC address
File dev: byte and packet statistics on a per device basis.
File netstat: various statistics
File tcp: established connections. 
<tt>Directory /proc/sys/net/ipv4/
File: ip_forward: read/write. Whether or not the kernal will forward IP packets from one interface to another. This is turned on if you want the machine to work as a router or a firewall. 

	If you want to set up a proxy firewall, this should be off, as it will be the application that forwards traffic, not the kernal.

File: ip_local_port_range: read/write. The range of ports that are used as source ports for outgoing connections.
File: tcp_sack: read/write. Whether or not TCP connections use selective acknowledgement. One=yes, zero=no.
File: tcp_timestamps: read/write. Whether or not TCP connections add timestamps to their connections. One=yes, zero=no. 


Software / Package management
yum update packages from the internet .. 
	rguments include list, info, install, remove, update, clean packages, upgrade
yumdownloader
up2date a gui for yum
apt-get update //updates repo data
apt-get install remove source etc..

Signals
Linux Signals are:
Signal Name	Number	Description
SIGHUP	1	Hangup (POSIX)
SIGINT	2	Terminal interrupt (ANSI)
SIGQUIT	3	Terminal quit (POSIX)
SIGILL	4	Illegal instruction (ANSI)
SIGTRAP	5	Trace trap (POSIX)
SIGIOT	6	IOT Trap (4.2 BSD)
SIGBUS	7	BUS error (4.2 BSD)
SIGFPE	8	Floating point exception (ANSI)
SIGKILL	9	Kill(can't be caught or ignored) (POSIX)
SIGUSR1	10	User defined signal 1 (POSIX)
SIGSEGV	11	Invalid memory segment access (ANSI)
SIGUSR2	12	User defined signal 2 (POSIX)
SIGPIPE	13	Write on a pipe with no reader, Broken pipe (POSIX)
SIGALRM	14	Alarm clock (POSIX)
SIGTERM	15	Termination (ANSI)
SIGSTKFLT	16	Stack fault
SIGCHLD	17	Child process has stopped or exited, changed (POSIX)
SIGCONT	18	Continue executing, if stopped (POSIX)
SIGSTOP	19	Stop executing(can't be caught or ignored) (POSIX)
SIGTSTP	20	Terminal stop signal (POSIX)
SIGTTIN	21	Background process trying to read, from TTY (POSIX)
SIGTTOU	22	Background process trying to write, to TTY (POSIX)
SIGURG	23	Urgent condition on socket (4.2 BSD)
SIGXCPU	24	CPU limit exceeded (4.2 BSD)
SIGXFSZ	25	File size limit exceeded (4.2 BSD)
SIGVTALRM	26	Virtual alarm clock (4.2 BSD)
SIGPROF	27	Profiling alarm clock (4.2 BSD)
SIGWINCH	28	Window size change (4.3 BSD, Sun)
SIGIO	29	I/O now possible (4.2 BSD)
SIGPWR	30	Power failure restart (System V)

X-Windows Troubleshooting Tools/Utilities

<tt>cat /var/log/XFree86.0.log -- print out the XFree86 error log. **Note that some systems do not store this log in /var/log. Use either locate XFree86.0.log or find / -name XFree86.0.log to find it.
glxinfo -- show the status of your OpenGL subsystem. 
X Device driver configuration: /etc/X11/xorg.conf    
    
Startup/Shutdown Commands
dmesg - display bootup messages.
halt - halt the system. (not recommened - use shutdown -h now instead)
init - set runlevel, or define processes that are begun on a specific runlevel.
poweroff - power the system off.
rdev - display system startup configuration info.
reboot - reboot the system.
# runlevel - show the current system runlevel.
# shutdown - shutdown the system.
# swapoff - disable the paging hardware.
# swapon - enable the paging hardware.
# sync - write buffered memory out to disk.
# telinit - move the system to a new runlevel.

Library-related Commands and Files

ldd	You can easily find out which shared libs a given app (or even another shared lib) requires using the ldd.

Programming-related Commands
Some programming-related commands:

for general help:
info - for gnu c lib functions

compiling
gcc -- "GNU Compiler Collection". Also C compiler.
g++ -- C++ front-end to GCC.
gcj -- Java front-end to GCC. 
javac, java -- java commands.
perl -MCPAN to install perl modules from cpan site.
cvs - version control system.. 
	options include: co ci add remove diff update release


linking and libraries (see also Library-related_Commands_and_Files)
ld - the GNU linker
ldd
ld.so
ldconfig
ar - tool for creating, modifying, and extracting from archives 

dealing with object files (see also binutils)
nm - lists symbols from object files
objcopy - copies and translates object files
objdump - display information from object files
readelf - displays information about ELF files 

lexical analyzer and parser
bison (the yacc replacement)
flex (the lex replacement) 

debugging
gdb
ddd 

build tools
make, makefile, configure script
automake - automatically generates 'Makefile.in's from 'Makefile.am's
autoconf - generates configuration scripts
libtool
ant
jam
scons 

source code tagging
ctags -- for vim- and NEdit-compatible tag files
etags -- for emacs-compatible tag files 

revision control
RCS
CVS
Subversion
GNU Arch 

database
/etc/init.d/mysqld - start to start the mysqld database.

Handy MySQL Commands
Description	Command
To login (from unix shell) use -h only if needed.	[mysql dir]/bin/mysql
-h hostname -u root -p

Create a database on the sql server.	create database [databasename];
List all databases on the sql server.	show databases;
Switch to a database.	use [db name];

show tables;
describe [table name];
drop database [database name];
drop table [table name];
SELECT * FROM [table name];
SELECT * FROM [table name] WHERE name != "Bob" AND phone_number = '3444444' order by phone_number;	
SELECT * FROM [table name] WHERE name like "Bob%" AND
phone_number = '3444444';	
Use a regular expression to find records. Use "REGEXP BINARY" to force
case-sensitivity. This finds any record beginning with a. 	
SELECT * FROM [table name] WHERE rec RLIKE "^a$";	
SELECT DISTINCT [column name] FROM [table name];
SELECT [col1],[col2] FROM [table name] ORDER BY [col2] DESC;
SELECT COUNT(*) FROM [table name];	
select lookup.illustrationid,lookup.personid,person.birthday from lookup left join person on lookup.personid=person.personid

INSERT INTO [table name] (Host,User,Password) VALUES('%','user',PASSWORD('password'));
Change a users password.(from unix shell).	[mysql dir]/bin/mysqladmin -u
root -h hostname.blah.org -p password 'new-password'
Change a users password.(from MySQL prompt).	SET PASSWORD FOR
'user'@'hostname' = PASSWORD('passwordhere');
Switch to mysql db.Give user privilages for a db.	INSERT INTO [table
name]
(Host,Db,User,Select_priv,Insert_priv,Update_priv,Delete_priv,Create_priv,Drop_priv)
VALUES ('%','db','user','Y','Y','Y','Y','Y','N');
To update info already in a table.	UPDATE [table name] SET Select_priv =
'Y',Insert_priv = 'Y',Update_priv = 'Y' where [field name] = 'user';

Delete a row(s) from a table.	DELETE from [table name] where [field name] =
'whatever';
Update database permissions/privilages.	FLUSH PRIVILEGES;

alter table [table name] drop column [column name];
alter table [table name] add column [new column name] varchar (20);
alter table [table name] change [old column name] [new column name] varchar (50);
alter table [table name] add unique ([column name]);
alter table [table name] modify [column name] VARCHAR(3);
alter table [table name] drop index [colmn name];

LOAD DATA INFILE '/tmp/filename.csv' replace
INTO TABLE [table name] FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'
(field1,field2,field3);

Dump all databases for backup.Backup file is sql commands to recreate all
db's.	[mysql dir]/bin/mysqldump --user=root --password=blah --all-databases
>/tmp/sql-01_backup.sql

Create Table Example 1. 	CREATE TABLE [table name] (firstname
VARCHAR(20), middleinitial VARCHAR(3), lastname VARCHAR(35),suffix VARCHAR(3),
officeid VARCHAR(10),userid VARCHAR(15),username VARCHAR(8),email
VARCHAR(35),phone VARCHAR(25), groups
VARCHAR(15),datestamp DATE,timestamp time,pgpemail VARCHAR(255));

Create Table Example 2. 	create table [table name] (personid int(50)
not null auto_increment primary key,firstname varchar(35),middlename
varchar(50),lastname varchar(50) default 'bato'); 

misc
addr2line - converts addresses into file names and line numbers
as - the portable GNU assembler
c++filt - demangles C++ and Java symbols
file
gprof - displays call graph profile data
ksymoops - a utility to decode Linux kernel oops
ranlib - generates index to archive
size - lists section sizes and total size
strings - finds printable strings in a file
strip - discards symbols from object files 

Managing Sessions

chvt - switches the display to the specified virtual terminal.
login - prompts the user for username and password.
logout - exists the current session and displays the login screen.
rlogin - enables you to establish a user session on another computer connected to the LAN. Deprecated, safety-hazard. Use ssh instead.
shutdown - Shuts down the system.
startx - This shell script, enables you to start a X session.
tty - Displays the number of the terminal device that is currently in use.
xdm, kdm, gdm - Starting the X (KDE, Gnome) Display Manager
xterm - Starts the xterm terminal emulation program. requires the X window system.
screen - Terminal multiplexer. This is somewhat like a virtual terminal, only much more powerful.
nohup - Prevents programs from getting killed on logout. 
shopt - show terminal options    
kill - send a signal to a process specified by pid
pkill - send a signal to a process specified by process name
	eg: pkill -19 yum to stop process yum
	pkill -18 yum to continue process yum
fg - bring process to the foreground.. 
	eg: fg yum. only works in the right terminal

Shell initialization
	first reads /etc/profile, then the first of ~/.bash_profile, ~/.bash_login, or ~/.profile that it finds. 

interesting keystrokes
ctrl alt del --- reboot
ctrl alt backspace ---- restart x
ctrl alt + ----- X zoom

bash
Bash-specific features

User features
clear	clears the screen.
Tab filename completion - Type the beginning of a command, variable, or file, press TAB, and bash will attempt to fill in the rest. 
Typing <Esc>. repeats the last argument of the previous command. 
Typing <Esc><BackSpace> backspaces a whole "word" at a time. 
Readline - a GNU-created library for line-by-line text input. It allows a searchable command history and easy editing of the current command line, among other things. 
<ctrl> + <r> invokes reverse-i-search for the command buffer (history of what you've typed). Then just type a part, any part, not necessarily from the begining, of a command you've typed in before and it'll give you the chronologically closest match 
help shows you brief info about a bunch of commands

Language features
The use of $( command ) for command substitution (backquotes are traditional) 
Numerical for loops 
    for (( i=0; i<10; i++ )) ; do echo $i ; done
Directory reading for loops
	for a in * ; do umount $a ; done
Substitution in variable expansions (not regex) 
    TEXT="I like dogs."
    echo ${TEXT/dogs/bats}   # Prints:   I like bats.

Be sure to check out the Advanced Bash Scripting Guide (http://www.tldp.org/LDP/abs/html), which has (most of) the info you need to start with bash scripting.

also, here is a dynamic command:
mv $(ls tm?) $(ls tm?).x

Custom Prompt
	The PS1 variable stores the command-line prompt that bash prints. For a colorful bash prompt that looks like:
username@hostname/pwd $
	use the following:
	export PS1='\[\e[32m\]\u@\h/\[\e[1;31m\]\w\[\e[1;34m\]\$\[\e[0m\] '
	For one without colors:
	username@hostname:pwd$
	export PS1='\u@\h:\w\$ '         # Single quotes with single backslashes
Some PS1 options:
\d Displays the date in "Weekday Month Date".
\e ASCII escape (See the console_codes man page (http://man.linuxquestions.org/index.php?query=console_codes&section=0&type=2) for what you can do).
\h Displays the hostname (up to the first '.').
\t Displays current time in 24-hour HH:MM:SS format.
\u Displays the name of your user.
\w Displays the name of the current directory.
\W Displays only the basename of the current directory.
\$ Displays '$' if you're not root, '#' if you are.
\[ and \] Surround non-printing characters 
In addition, the PROMPT_COMMAND variable is run every time the shell prompt is printed. Many use this to change the xterm title bar:
export PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\007"'

Some General Comments
Here's an example shell script:
#!/bin/bash
$ echo 'The location of the shell is stored in $BASH'
$ echo "The location of the shell is $BASH"

 An A-Z Index of the Linux BASH command line
alias    Create an alias
awk      Find and Replace text, database sort/validate/index
break    Exit from a loop
builtin  Run a shell builtin

cal      Display a calendar
case     Conditionally perform a command
cat      Display the contents of a file
cd       Change Directory
cfdisk   Partition table manipulator for Linux
chgrp    Change group ownership
chmod    Change access permissions
chown    Change file owner and group
chroot   Run a command with a different root directory
cksum    Print CRC checksum and byte counts
clear    Clear terminal screen
cmp      Compare two files
comm     Compare two sorted files line by line
command  Run a command - ignoring shell functions
continue Resume the next iteration of a loop
cp       Copy one or more files to another location
cron     Daemon to execute scheduled commands
crontab  Schedule a command to run at a later time
csplit   Split a file into context-determined pieces
cut      Divide a file into several parts

date     Display or change the date & time
dc       Desk Calculator
dd       Data Dump - Convert and copy a file
declare  Declare variables and give them attributes
df       Display free disk space
diff     Display the differences between two files
diff3    Show differences among three files
dir      Briefly list directory contents
dircolors Colour setup for `ls'
dirname  Convert a full pathname to just a path
dirs     Display list of remembered directories
du       Estimate file space usage

echo     Display message on screen
ed       A line-oriented text editor (edlin)
egrep    Search file(s) for lines that match an extended expression
eject    Eject CD-ROM
enable   Enable and disable builtin shell commands
env      Display, set, or remove environment variables
eval     Evaluate several commands/arguments
exec     Execute a command
exit     Exit the shell
expand   Convert tabs to spaces
export   Set an environment variable
expr     Evaluate expressions

factor   Print prime factors
false    Do nothing, unsuccessfully
fdformat Low-level format a floppy disk
fdisk    Partition table manipulator for Linux
fgrep    Search file(s) for lines that match a fixed string
find     Search for files that meet a desired criteria
fmt      Reformat paragraph text
fold     Wrap text to fit a specified width.
for      Expand words, and execute commands
format   Format disks or tapes
free     Display memory usage
fsck     Filesystem consistency check and repair.
function Define Function Macros

gawk     Find and Replace text within file(s)
getopts  Parse positional parameters
grep     Search file(s) for lines that match a given pattern
groups   Print group names a user is in
gzip     Compress or decompress named file(s)

hash     Remember the full pathname of a name argument
head     Output the first part of file(s)
history  Command History
hostname Print or set system name

id       Print user and group id's
if       Conditionally perform a command
import   Capture an X server screen and save the image to file
info     Help info
install  Copy files and set attributes

join     Join lines on a common field

kill     Stop a process from running

less     Display output one screen at a time
let      Perform arithmetic on shell variables
ln       Make links between files
local    Create variables
locate   Find files
logname  Print current login name
logout   Exit a login shell
lpc      Line printer control program
lpr      Off line print
lprint   Print a file
lprintd  Abort a print job
lprintq  List the print queue
lprm     Remove jobs from the print queue
ls       List information about file(s)

m4       Macro processor
man      Help manual
mkdir    Create new folder(s)
mkfifo   Make FIFOs (named pipes)
mknod    Make block or character special files
more     Display output one screen at a time
mount    Mount a file system
mtools   Manipulate MS-DOS files
mv       Move or rename files or directories

nice     Set the priority of a command or job
nl       Number lines and write files
nohup    Run a command immune to hangups

passwd   Modify a user password
paste    Merge lines of files
pathchk  Check file name portability
popd     Restore the previous value of the current directory
pr       Convert text files for printing
printcap Printer capability database
printenv Print environment variables
printf   Format and print data
ps       Process status
pushd    Save and then change the current directory
pwd      Print Working Directory

quota    Display disk usage and limits
quotacheck Scan a file system for disk usage
quotactl Set disk quotas

ram      ram disk device
rcp      Copy files between two machines.
read     read a line from standard input
readonly Mark variables/functions as readonly
remsync  Synchronize remote files via email
return   Exit a shell function
rm       Remove files
rmdir    Remove folder(s)
rpm      Remote Package Manager
rsync    Remote file copy (Synchronize file trees)

screen   Terminal window manager
sdiff    Merge two files interactively
sed      Stream Editor
select   Accept keyboard input
seq      Print numeric sequences
set      Manipulate shell variables and functions
shift    Shift positional parameters
shopt    Shell Options
shutdown Shutdown or restart linux
sleep    Delay for a specified time
sort     Sort text files
source   Run commands from a file `.'
split    Split a file into fixed-size pieces
su       Substitute user identity
sum      Print a checksum for a file
symlink  Make a new name for a file
sync     Synchronize data on disk with memory

tac      Concatenate and write files in reverse
tail     Output the last part of files
tar      Tape ARchiver
tee      Redirect output to multiple files
test     Evaluate a conditional expression
time     Measure Program Resource Use
times    User and system times
touch    Change file timestamps
top      List processes running on the system
traceroute Trace Route to Host
trap     Run a command when a signal is set(bourne)
tr       Translate, squeeze, and/or delete characters
true     Do nothing, successfully
tsort    Topological sort
tty      Print filename of terminal on stdin
type     Describe a command

ulimit   Limit user resources
umask    Users file creation mask
umount   Unmount a device
unalias  Remove an alias
uname    Print system information
unexpand Convert spaces to tabs
uniq     Uniquify files
units    Convert units from one scale to another
unset    Remove variable or function names
unshar   Unpack shell archive scripts
until    Execute commands (until error)
useradd  Create new user account
usermod  Modify user account
users    List users currently logged in
uuencode Encode a binary file 
uudecode Decode a file created by uuencode

v        Verbosely list directory contents (`ls -l -b')
vdir     Verbosely list directory contents (`ls -l -b')

watch    Execute/display a program periodically
wc       Print byte, word, and line counts
whereis  Report all known instances of a command    
which    Locate a program file in the user's path. 
while    Execute commands
who      Print all usernames currently logged in
whoami   Print the current user id and name (`id -un')

xargs    Execute utility, passing constructed argument list(s)
yes      Print a string until interrupted

.period  Run commands from a file
###      Comment / Remark

ls *junk* | grep -v no | xargs -iz rm -f $2*  .... executing command with args as output of ls


Get your IP address
lynx -dump http://www.whatismyip.com | awk '/^Your IP is/ { print $4; }' 
Or use this:
/sbin/ifconfig ppp0 | awk '/inet/{ printf("%s\n", substr($2,index($2,":")+1)) }'</b>

Some counting examples
x=0; ((x++))
x=0; x=$((x+1))
x=0; let x=$x+1
for (( x=0; x<10; x++ )) ; do echo $x ; done
for x in `seq 0 9`; do echo $x; done 
x=0; x=$(expr $x + 1) 
x=0; x=$(echo $x + 1|bc)
x=4; x=$(echo scale=5\; $x / 3.14|bc)
The first four demonstrate Bash' internal counting mechanisms, these will not use external programs and are thus safe (and fast). The last four use external programs. bc, as used in the last two examples, is the only one that supports numbers with decimals. For adding, subtracting and multiplying, you don't have to do anything special, but for division you need to specify the number of digits to keep (default is none) using the 'scale=n' line.

Combining multiple conditions of if statements
AND:
if(a==1 && b==2)
OR:
if(( a!=1 || b>10 ))



Renaming a set of files
$ for f in filelist ... ; do mv "$f" "${f/oldname/newname}" ; done
mmv is a really nifty tool for doing this sort of thing more flexibly too. The rename command also provides similar functionality, depending on your linux distribution.
If you have a load of files in all capital letters (common if you unzip old DOS programs for instance), you can use
$ for a in *; do mv "$a" "`tr A-Z a-z <<< $a`"; done
to make all the files in the current directory lowercase.

Extracting addresses from a mailbox file
This statement will pull out everything that looks like an e-mail address from a mailbox file (here called foo), and sort them into alphabetical order.
 awk '!/essage-[iI][dD]/ && !/MAILER-DAEMON/ {
   if (match($0, /([A-Za-z][A-Za-z0-9._-]*@[A-Za-z0-9._-]+)/))
     print substr($0, RSTART, RLENGTH); }' foo |sort |uniq
The awk script works as follows. If the line is not a message-id header, does not mention "MAILER-DAEMON", and has something in it that looks like an email address, then the address-like portion is extracted and printed. The output from awk is sorted alphabetically by sort, and uniq deletes repetitions.

Converting several wav files to mp3
This statement will convert all .wav files in a directory to mp3 (assuming you already have the [lame (http://lame.sourceforge.net/)] package installed):
    for i in *.wav; do lame -h $i && rm $i; done 
The double ampersand prevents rm from deleting files that weren't successfully converted.

Full file name
Prints the full filename removing ./ and ../ and adding `pwd` if necessary. I keep this in a script called fqn
#!/bin/sh
# return the full filename, removing ./ ../ adding `pwd` if necessary
FILE="$1"
# file		dot relative
# ./file	dot relative
# ../file	parent relative
# /file		absolute
while true; do
	case "$FILE" in
		( /* ) 		
		# Remove /./ inside filename:
		while echo "$FILE" |fgrep "/./" >/dev/null 2>&1; do
			FILE=`echo "$FILE" | sed "s/\\/\\.\\//\\//"`
		done
		# Remove /../ inside filename:
		while echo "$FILE" |grep "/[^/][^/]*/\\.\\./" >/dev/null 2>&1; do
			FILE=`echo "$FILE" | sed "s/\\/[^/][^/]*\\/\\.\\.\\//\\//"`
		done
		echo "$FILE"
		exit 0
		;;
		(*)
		FILE=`pwd`/"$FILE"
		;;
	esac
done


Resolving a link
This little script follows symbolic links wherever they may lead and prints the ultimate filename (if it exists!) (note - it uses the previous script accessed as fqn
#!/bin/sh
# prints the real file pointed to by a link
# usage: $0 link
ORIG_LINK="$1"
LINK=`fqn "$1"`
while [ -h "$LINK" ]; do
	DIR=`dirname "$LINK"`

	# next link is everything from "-> "
	LINK=`ls -l "$LINK" |sed "s/^.*-> //"`

	LINK=`cd "$DIR"; fqn "$LINK"`
	if [ ! -e "$LINK" ]; then
		echo "\"$ORIG_LINK\" is a broken link: \"$LINK\" does not exist" >&2
		exit 1
	fi
done
echo "$LINK"
exit 0


Viewing a file according to its type
I save this as a script called v and it is my universal viewing script - it can be extended to any kind of file and to use your favourite tools for each type of file. It uses the file utility to determine what sort of file it is and then invokes the correct tool. It automatically adapts to being used on the system console or under X.
(note - this uses a prior script fqn)
#! /bin/sh
# View files based on the type of the first one:
# Relies partly on 'less' to invoke an appropriate viewer.
# Make sure than you have this set:
# LESSOPEN="|lesspipe.sh %s"
FIRST="$1"
FULL=`fqn $FIRST`
# if we are being piped to, just run less
[ -z "$FIRST" -o ! -r "$FIRST" ] && exec less "$@"
# some file types beyond what /usr/bin/lesspipe.sh handles:
case "$FIRST" in
  *.cpio.bz2) bunzip2 -c $1 | cpio -ctv 2>/dev/null |less; exit ;;
  *.cpio) cpio -ctv $1 2>/dev/null |less; exit;;
esac
TYPE=`file -L -i "$FIRST"  2>/dev/null | \
  awk '{len=length("'"$FIRST"'")+ 2; $0=substr($0, len); print $1;}'`
echo "Type=\"$TYPE\""
case "$TYPE" in
    image/jpeg | image/tiff | image/gif | image/x-xpm | image/*)
        xzgv "$@" ;;
    application/pdf) 
	XPDFGEOM=`xdpyinfo |awk '/dimensions/ {print $2}'| \
          awk -Fx '{printf("%dx%d+0+0", 0.60*$1, $2-35)}'`
	xpdf -geometry $XPDFGEOM -z width "$@" 
	;;
    application/postscript)
        gv "$@" ;;
    application/msword)
        if [ -z "$DISPLAY" ] ; then antiword "$@" | \
          less; else soffice "$@" & fi ;;
    text/html)
        if [ -z "$DISPLAY" ] ; then lynx "$@"; else dillo "$FULL" & fi ;;
    audio/mpeg)
        mpg123 "$FIRST" ;;
    *)
        less "$@" ;;
esac


Portable Indirection
Sometimes you need to use the value of a variable whose name is held in another variable. This is indirection. For example:
 for V in PATH LD_LIBRARY_PATH; do echo ${!V}; done
but that isn't portable to older shells, eg. the old Bourne shell. A portable way is to use the following instead of ${!V}:
 `eval echo \\$"$V"`
It's not pretty but at least it works on nearly all Unixes.

for audible alerts:
while true; do printf "remove lan wire and shutdown \a\n"; done; 

SLEEP COMMANDS

sleep command
usleep command 

multimedia commands
sox convert sound files among various formats.
to activate/ deactivate quake3 sound system:
echo "quake3.x86 0 0 direct" > /proc/asound/card0/pcm0p/oss
echo "quake3.x86 0 0 disable" > /proc/asound/card0/pcm0p/oss
mplayer -playlist 'http://etc' to play rm, asx and other streams.
gphoto2 --auto-detect --get-all-files to list cameras and copy files.

edutainment
aiksaurus is a thesarus.
dictd --locale en_US.utf8 -fvvs starts up dictionary demon..
dict	refer the dictionary databases served by dictd servers.
bcc -l - calculator! 
functions available: s,c,a,l,e,j,sqrt
kcalc - very good calculator.
festival - text to speech thing

using peripherals
pocket pc
modprobe ipaq
dmesg
dccm
synce-serial-config
synce-serial-start
synce-serial-abort
 pstatus (donne l'état de la connexion)
synce-matchmaker (créer un partenariat avec la machine)
pppd &(peut-être)
pcp    copy files
pls    list directory contents
pmkdir    make directory
pmv    move (rename) files
prm    remove file
prmdir    remove an empty directory
prun    run a program
pstatus    display status about remote device
synce-install-cab    install a .cab file
http://synce.sourceforge.net/

windows emulation
wine
winecfg configure wine


